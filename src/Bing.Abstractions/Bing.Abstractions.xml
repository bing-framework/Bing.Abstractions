<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Bing.Serialization.IBssomSerializer">
            <summary>
            Bssom 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.IBytesSerializer">
            <summary>
            字节数组对象序列化器元接口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IBytesSerializer.FromBytes``1(System.Byte[])">
            <summary>
            将字节数组反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="bytes">字节数组</param>
            <returns>如果 bytes 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.IBytesSerializer.FromBytes(System.Type,System.Byte[])">
            <summary>
            将字节数组反序列化为对象
            </summary>
            <param name="type">对象类型</param>
            <param name="bytes">字节数组</param>
            <returns>如果 bytes 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.IBytesSerializer.ToBytes``1(``0)">
            <summary>
            将对象序列化为字节数组
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.IBytesSerializer.ToBytes(System.Type,System.Object)">
            <summary>
            将对象序列化为字节数组
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.IIniSerializer">
            <summary>
            Ini 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.IniSerializerExtensions">
            <summary>
            Ini序列化器(<see cref="T:Bing.Serialization.IIniSerializer"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.IniSerializerExtensions.FromIni``1(Bing.Serialization.IIniSerializer,System.String)">
            <summary>
            将INI字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="ini">ini字符串</param>
            <returns>如果 ini 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.IniSerializerExtensions.FromIni(Bing.Serialization.IIniSerializer,System.Type,System.String)">
            <summary>
            将INI字符串反序列化为对象
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="ini">ini字符串</param>
            <returns>如果 ini 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.IniSerializerExtensions.ToIni``1(Bing.Serialization.IIniSerializer,``0)">
            <summary>
            将对象序列化为INI字符串
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.IniSerializerExtensions.ToIni(Bing.Serialization.IIniSerializer,System.Type,System.Object)">
            <summary>
            将对象序列化为INI字符串
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.IJsonSerializer">
            <summary>
            Json 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.JsonSerializerExtension">
            <summary>
            Json序列化器(<see cref="T:Bing.Serialization.IJsonSerializer"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.JsonSerializerExtension.FromJson``1(Bing.Serialization.IJsonSerializer,System.String)">
            <summary>
            将Json字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="json">Json字符串</param>
            <returns>如果 json 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.JsonSerializerExtension.FromJson(Bing.Serialization.IJsonSerializer,System.Type,System.String)">
            <summary>
            将Json字符串反序列化为对象
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="json">Json字符串</param>
            <returns>如果 json 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.JsonSerializerExtension.ToJson``1(Bing.Serialization.IJsonSerializer,``0)">
            <summary>
            将对象序列化为Json字符串
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.JsonSerializerExtension.ToJson(Bing.Serialization.IJsonSerializer,System.Type,System.Object)">
            <summary>
            将对象序列化为Json字符串
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.IJsonSerializerConfigureEntry">
            <summary>
            Json 序列化器配置入口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IJsonSerializerConfigureEntry.ConfigureJsonSerializer(Bing.Serialization.IJsonSerializer)">
            <summary>
            配置Json序列化器
            </summary>
            <param name="serializer">Json序列化器</param>
        </member>
        <member name="M:Bing.Serialization.IJsonSerializerConfigureEntry.ConfigureJsonSerializer(System.Func{Bing.Serialization.IJsonSerializer})">
            <summary>
            配置Json序列化器
            </summary>
            <param name="serializerFactory">Json序列化器工厂</param>
        </member>
        <member name="T:Bing.Serialization.IMessagePackSerializer">
            <summary>
            MessagePack 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.IObjectSerializer">
            <summary>
            对象序列化器元接口
            </summary>
        </member>
        <member name="T:Bing.Serialization.IObjectSerializer`1">
            <summary>
            对象序列化器元接口
            </summary>
            <typeparam name="TData">指定的目标序列化类型</typeparam>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.Serialize``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">被序列化对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.Deserialize``1(`0)">
            <summary>
            反序列化
            </summary>
            <typeparam name="TValue">被序列化对象类型</typeparam>
            <param name="data">被反序列化对象</param>
            <returns>反序列化结果</returns>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.Deserialize(System.Type,`0)">
            <summary>
            反序列化
            </summary>
            <param name="type">被序列化对象类型</param>
            <param name="data">被反序列化对象</param>
            <returns>反序列化结果</returns>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.SerializeAsync``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">被序列化对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.DeserializeAsync``1(`0)">
            <summary>
            反序列化
            </summary>
            <typeparam name="TValue">被序列化对象类型</typeparam>
            <param name="data">被反序列化对象</param>
            <returns>反序列化结果</returns>
        </member>
        <member name="M:Bing.Serialization.IObjectSerializer`1.DeserializeAsync(System.Type,`0)">
            <summary>
            反序列化
            </summary>
            <param name="type">被序列化对象类型</param>
            <param name="data">被反序列化对象</param>
            <returns>反序列化结果</returns>
        </member>
        <member name="T:Bing.Serialization.IProtobufSerializer">
            <summary>
            Google ProtoBuf 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.IStreamSerializerAsync">
            <summary>
            流对象序列化器元接口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.FromStreamAsync``1(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            异步反序列化
            </summary>
            <typeparam name="TValue">被反序列化对象类型</typeparam>
            <param name="stream">流</param>
            <param name="cancellationToken">取消令牌</param>
            <returns>反序列化对象</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.FromStreamAsync(System.Type,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            异步反序列化
            </summary>
            <param name="type">被反序列化对象类型</param>
            <param name="stream">流</param>
            <param name="cancellationToken">取消令牌</param>
            <returns>反序列化对象</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.PackAsync``1(``0,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            序列化对象并打包到流中
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
            <param name="stream">流</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.PackAsync(System.Type,System.Object,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            序列化对象并打包到流中
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
            <param name="stream">流</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.ToStreamAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            异步序列化
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
            <param name="cancellationToken">取消令牌</param>
            <returns>内存流</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializerAsync.ToStreamAsync(System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>
            异步序列化
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
            <param name="cancellationToken">取消令牌</param>
            <returns>内存流</returns>
        </member>
        <member name="T:Bing.Serialization.IStreamSerializer">
            <summary>
            流对象序列化器元接口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.FromStream``1(System.IO.Stream)">
            <summary>
            反序列化
            </summary>
            <typeparam name="TValue">被反序列化对象类型</typeparam>
            <param name="stream">流</param>
            <returns>反序列化对象</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.FromStream(System.Type,System.IO.Stream)">
            <summary>
            反序列化
            </summary>
            <param name="type">被反序列化对象类型</param>
            <param name="stream">流</param>
            <returns>反序列化对象</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.Pack``1(``0,System.IO.Stream)">
            <summary>
            序列化对象并打包到流中
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
            <param name="stream">流</param>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.Pack(System.Type,System.Object,System.IO.Stream)">
            <summary>
            序列化对象并打包到流中
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
            <param name="stream">流</param>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.ToStream``1(``0)">
            <summary>
            将对象序列化成流
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
            <returns>序列化流</returns>
            <returns>内存流</returns>
        </member>
        <member name="M:Bing.Serialization.IStreamSerializer.ToStream(System.Type,System.Object)">
            <summary>
            将对象序列化成流
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
            <returns>内存流</returns>
        </member>
        <member name="T:Bing.Serialization.ITextSerializer">
            <summary>
            文本对象序列化器元接口
            </summary>
        </member>
        <member name="M:Bing.Serialization.ITextSerializer.FromText``1(System.String)">
            <summary>
            将字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="text">文本</param>
            <returns>如果 text 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.ITextSerializer.FromText(System.Type,System.String)">
            <summary>
            将字符串反序列化为对象
            </summary>
            <param name="type">对象类型</param>
            <param name="text">文本</param>
            <returns>如果 text 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.ITextSerializer.ToText``1(``0)">
            <summary>
            序列化为字符串
            </summary>
            <typeparam name="TValue">序列化对象类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.ITextSerializer.ToText(System.Type,System.Object)">
            <summary>
            序列化为字符串
            </summary>
            <param name="type">序列化对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.ITomlSerializer">
            <summary>
            Toml 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.TomlSerializerExtensions">
            <summary>
            Toml序列化器(<see cref="T:Bing.Serialization.ITomlSerializer"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.TomlSerializerExtensions.FromToml``1(Bing.Serialization.ITomlSerializer,System.String)">
            <summary>
            将Toml字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="toml">Toml字符串</param>
            <returns>如果 toml 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.TomlSerializerExtensions.FromToml(Bing.Serialization.ITomlSerializer,System.Type,System.String)">
            <summary>
            将Toml字符串反序列化为对象
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="toml">Toml字符串</param>
            <returns>如果 toml 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.TomlSerializerExtensions.ToToml``1(Bing.Serialization.ITomlSerializer,``0)">
            <summary>
            将对象序列化为Toml字符串
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.TomlSerializerExtensions.ToToml(Bing.Serialization.ITomlSerializer,System.Type,System.Object)">
            <summary>
            将对象序列化为Toml字符串
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.ITomlSerializerConfigureEntry">
            <summary>
            Toml序列化器配置入口
            </summary>
        </member>
        <member name="M:Bing.Serialization.ITomlSerializerConfigureEntry.ConfigureTomlSerializer(Bing.Serialization.ITomlSerializer)">
            <summary>
            配置Toml序列化器
            </summary>
            <param name="serializer">Toml序列化器</param>
        </member>
        <member name="M:Bing.Serialization.ITomlSerializerConfigureEntry.ConfigureTomlSerializer(System.Func{Bing.Serialization.ITomlSerializer})">
            <summary>
            配置Toml序列化器
            </summary>
            <param name="serializerFactory">Toml序列化器工厂</param>
        </member>
        <member name="T:Bing.Serialization.IXmlSerializer">
            <summary>
            XML 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.XmlSerializerExtensions">
            <summary>
            Xml序列化器(<see cref="T:Bing.Serialization.IXmlSerializer"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.XmlSerializerExtensions.FromXml``1(Bing.Serialization.IXmlSerializer,System.String)">
            <summary>
            将XML字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="xml">xml字符串</param>
            <returns>如果 xml 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.XmlSerializerExtensions.FromXml(Bing.Serialization.IXmlSerializer,System.Type,System.String)">
            <summary>
            将XML字符串反序列化为对象
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="xml">xml字符串</param>
            <returns>如果 xml 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.XmlSerializerExtensions.ToXml``1(Bing.Serialization.IXmlSerializer,``0)">
            <summary>
            将对象序列化为XML字符串
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.XmlSerializerExtensions.ToXml(Bing.Serialization.IXmlSerializer,System.Type,System.Object)">
            <summary>
            将对象序列化为XML字符串
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.IXmlSerializerConfigureEntry">
            <summary>
            Xml 序列化器配置入口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IXmlSerializerConfigureEntry.ConfigureXmlSerializer(Bing.Serialization.IXmlSerializer)">
            <summary>
            配置Xml序列化器
            </summary>
            <param name="serializer">Xml序列化器</param>
        </member>
        <member name="M:Bing.Serialization.IXmlSerializerConfigureEntry.ConfigureXmlSerializer(System.Func{Bing.Serialization.IXmlSerializer})">
            <summary>
            配置Xml序列化器
            </summary>
            <param name="serializerFactory">Xml序列化器工厂</param>
        </member>
        <member name="T:Bing.Serialization.IYamlSerializer">
            <summary>
            Yaml 序列化器
            </summary>
        </member>
        <member name="T:Bing.Serialization.YamlSerializerExtensions">
            <summary>
            Yaml序列化器(<see cref="T:Bing.Serialization.IYamlSerializer"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.YamlSerializerExtensions.FromYaml``1(Bing.Serialization.IYamlSerializer,System.String)">
            <summary>
            将YAML字符串反序列化为对象
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="yaml">yaml字符串</param>
            <returns>如果 yaml 为 null 或为空，将返回 TValue 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.YamlSerializerExtensions.FromYaml(Bing.Serialization.IYamlSerializer,System.Type,System.String)">
            <summary>
            将YAML字符串反序列化为对象
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="yaml">yaml字符串</param>
            <returns>如果 yaml 为 null 或为空，将返回 type 的默认值</returns>
        </member>
        <member name="M:Bing.Serialization.YamlSerializerExtensions.ToYaml``1(Bing.Serialization.IYamlSerializer,``0)">
            <summary>
            将对象序列化为YAML字符串
            </summary>
            <typeparam name="TValue">对象类型</typeparam>
            <param name="serializer">序列化器</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Serialization.YamlSerializerExtensions.ToYaml(Bing.Serialization.IYamlSerializer,System.Type,System.Object)">
            <summary>
            将对象序列化为YAML字符串
            </summary>
            <param name="serializer">序列化器</param>
            <param name="type">对象类型</param>
            <param name="value">值</param>
        </member>
        <member name="T:Bing.Serialization.IYamlSerializerConfigureEntry">
            <summary>
            Yaml 序列化器配置入口
            </summary>
        </member>
        <member name="M:Bing.Serialization.IYamlSerializerConfigureEntry.ConfigureYamlSerializer(Bing.Serialization.IYamlSerializer)">
            <summary>
            配置Yaml序列化器
            </summary>
            <param name="serializer">Yaml序列化器</param>
        </member>
        <member name="M:Bing.Serialization.IYamlSerializerConfigureEntry.ConfigureYamlSerializer(System.Func{Bing.Serialization.IYamlSerializer})">
            <summary>
            配置Yaml序列化器
            </summary>
            <param name="serializerFactory">Yaml序列化器工厂</param>
        </member>
        <member name="T:Bing.Serialization.IZeroFormatterSerializer">
            <summary>
            ZeroFormatter 序列化器
            </summary>
        </member>
    </members>
</doc>
